ylim(120,180)+
xlab("n?veis de aduba??o org?nica (kg de esterco de boi/3,6 m2)") +
ylab("altura de plantas (cm) de alface (Lactuca sativa L.)")
dados$Dose <- as.factor(dados$dose)
#' # ANOVA
mod.anova <- lm(altura ~ Dose, dados)
anova(mod.anova)
#' - Modelo de regress?o linear + Desvios de regress?o
mod.lin <- lm(altura ~ dose + Dose, dados)
anova(mod.lin)
#' - Modelo de regress?o quadr?tica + Desvios de regress?o
mod.quad <- lm(altura ~ dose + I(dose^2) + Dose, dados)
anova(mod.quad)
#' - Modelo selecionado
mod.aj <- lm(altura ~ dose + I(dose^2), dados)
#' ## Coeficientes estimados
coef(mod.aj)
#' ## Fun??o ajustada
fun.mod <- function(x){
coef(mod.aj)[1] + coef(mod.aj)[2]*x + coef(mod.aj)[3]*x^2
}
ggplot(dados, aes(x = dose, y = altura)) +
stat_summary(fun.y = mean, geom = "point", color = "red") +
stat_function(fun = fun.mod) +
ylim(6,15)+
xlab("n?veis de aduba??o org?nica (kg de esterco de boi/3,6 m2)") +
ylab("altura de plantas (cm) de alface (Lactuca sativa L.)")
$ git config --global user.name "Fulano de Tal"
$ git config --global user.name ulysses1212
$ git config --global user.name 'ulysses1212'
$ git config --global user.email ulysses.netto@usp.br
$ git config --global user.email ulysses.netto@usp.br
'$' git config --global user.email ulysses.netto@usp.br
$ git config --global user.name
# Do repositório de divulgação no GitHub.
install_github(repo = "labestData",
username = "pet-estatistica",
ref = "master", build_vignettes = TRUE)
install.packages("devtools")
# Do repositório de divulgação no GitHub.
install_github(repo = "labestData",
username = "pet-estatistica",
ref = "master", build_vignettes = TRUE)
install.packages("http://leg.ufpr.br/~walmes/pacotes/labestData_x.y.z.w.zip",
repos = NULL)
# Importa a tabela de dados da web.
url <- "http://www.leg.ufpr.br/~walmes/data/duster_venda_260314.txt"
dus <- read.table(file = url,
header = TRUE,
sep = "\t",
encoding = "utf-8")
str(dus)
# Cria ano do veículo com extração regex.
dus$ano <- factor(gsub(x = as.character(dus$ano),
pattern = "/\\d{4}$",
replacement = ""))
# Quantidade de NA em cada coluna.
apply(dus, MARGIN = 2, FUN = function(x) sum(is.na(x)))
# Tabela de frequência.
x <- table(dus$cambio)
class(x)
# Com anotações nas margens e cores.
barplot(x,
xlab = "Tipo de câmbio",
ylab = "Frequência absoluta",
col = c("seagreen", "yellowgreen"))
# Horizontal.
barplot(x,
horiz = TRUE,
xlab = "Tipo de câmbio",
ylab = "Frequência absoluta",
col = c("seagreen", "#FF9911"))
# Cores com `green` no vetor de cores `colors()`.
grep(pattern = "green", x = colors(), value = TRUE)
# Gráfico de setores. Evite usar referências radiais pois comparações de
# arcos são prejudicadas por não estarem alinhadas.
pie(x,
col = c("#5398ed",
rgb(12, 58, 114, max = 255)),
main = "Tipo de câmbio")
# Para as cores do carro.
x <- xtabs(~cor, data = dus)
pie(x)
# Vetor que cores para usar com cada cor de veiculo.
cols <- c("blue", "white", "gray50", "Yellow", "gray90", "black",
"green4", "red", "red4")
cbind(levels(dus$cor), cols)
# Reordenar os níveis do fator e as cores.
ord <- order(x, decreasing = TRUE)
cols <- cols[ord]
x <- x[ord]
n <- names(x)
dus$cor <- factor(dus$cor, levels = n)
cbind(levels(dus$cor), cols)
a <- barplot(x,
xaxt = "n",
las = 1,
col = cols)
mtext(side = 2, text = "Frequência absoluta", line = 3)
axis(side = 1, at = a, labels = n, las = 2)
box(bty = "L")
par(mar = c(4.1, 7.1, 2.1, 2.1))
barplot(x,
horiz = TRUE,
las = 1,
col = cols)
mtext(side = 2, text = "Cor", line = 5)
mtext(side = 1, text = "Frequência absoluta", line = 2)
box(bty = "L")
dados <- c(0.15, 0.32, 0.32, 0.20, 0.20, 0.18)
dados
boxplot(dados)
summary(dados)
# Taking two numeric
# Vectors with same length
x = c(2.0, 2.5, 2.9, 3.3, 4.1, 4.3, 7.0, 13.0)
y = c(17.5, 18.5, 19.5, 22.2, 26.5, 16.6, 36.6, 38.4)
# Calculating
# Correlation coefficient
# Using cor() method
result = cor(x, y, method = "pearson")
# Print the result
cat("Pearson correlation coefficient is:", result)
# Taking two numeric
# Vectors with same length
x = c(2.0, 2.5, 2.9, 3.3, 4.1, 7.0, 13.0)
y = c(17.5, 18.5, 19.5, 22.2, 26.5, 36.6, 38.4)
# Calculating
# Correlation coefficient
# Using cor() method
result = cor(x, y, method = "pearson")
# Print the result
cat("Pearson correlation coefficient is:", result)
## Coleta e tratamento dos dados do Comércio Restrito
names = c('date', 'receita', 'receita_sa', 'volume', 'volume_sa')
restrito = get_sidra(api='/t/3416/n1/all/v/all/p/all/c11046/40311,40312/d/v564%201,v565%201') %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('Índice de receita nominal de vendas no comércio varejista',
'Índice de volume de vendas no comércio varejista')) %>%
`colnames<-`(names) %>%
as_tibble()
## Pacotes utilizados nessa apresentação
library(tidyverse)
library(lubridate)
library(tstools)
library(sidrar)
library(zoo)
library(scales)
library(gridExtra)
library(tsibble)
library(timetk)
library(knitr)
## Coleta e tratamento dos dados do Comércio Restrito
names = c('date', 'receita', 'receita_sa', 'volume', 'volume_sa')
restrito = get_sidra(api='/t/3416/n1/all/v/all/p/all/c11046/40311,40312/d/v564%201,v565%201') %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('Índice de receita nominal de vendas no comércio varejista',
'Índice de volume de vendas no comércio varejista')) %>%
`colnames<-`(names) %>%
as_tibble()
## Pacotes utilizados nessa apresentação
library(tidyverse)
install.packages("tidyverse")
## Pacotes utilizados nessa apresentação
library(tidyverse)
library(lubridate)
library(tstools)
install.packages("tstools")
library(tstools)
library(sidrar)
library(zoo)
library(scales)
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
library(tsibble)
install.packages("tsibble")
library(tsibble)
library(timetk)
## Coleta e tratamento dos dados do Comércio Restrito
names = c('date', 'receita', 'receita_sa', 'volume', 'volume_sa')
restrito = get_sidra(api='/t/3416/n1/all/v/all/p/all/c11046/40311,40312/d/v564%201,v565%201') %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('Índice de receita nominal de vendas no comércio varejista',
'Índice de volume de vendas no comércio varejista')) %>%
`colnames<-`(names) %>%
as_tibble()
View(restrito)
View(restrito)
## Coleta e tratamento dos dados do Comércio Restrito
names = c('date', 'receita', 'receita_sa', 'volume', 'volume_sa')
restrito = get_sidra(api='/t/8185/n1/all/v/all/p/all/c315/all/d/v76%202,v86%202') %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('Índice de receita nominal de vendas no comércio varejista',
'Índice de volume de vendas no comércio varejista')) %>%
`colnames<-`(names) %>%
as_tibble()
restrito = get_sidra(api='/t/8185/n1/all/v/all/p/all/c315/1505/d/v76%202,v86%202') %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('Índice de receita nominal de vendas no comércio varejista',
'Índice de volume de vendas no comércio varejista')) %>%
`colnames<-`(names) %>%
as_tibble()
## Coleta e tratamento dos dados do Comércio Restrito
names = c('date', 'receita', 'receita_sa', 'volume', 'volume_sa')
restrito = get_sidra(api='/t/8185/n1/all/v/all/p/all/c315/1505/d/v76%202,v86%202') %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('Índice de receita nominal de vendas no comércio varejista',
'Índice de volume de vendas no comércio varejista')) %>%
`colnames<-`(names) %>%
as_tibble()
## Coleta e tratamento dos dados do Comércio Restrito
names = c('date', 'receita', 'receita_sa', 'volume', 'volume_sa')
restrito = get_sidra(api='/values/t/8185/n1/all/n3/all/v/11706/p/last%2035/c11046/all/d/v11706%205') %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('Índice de receita nominal de vendas no comércio varejista',
'Índice de volume de vendas no comércio varejista')) %>%
`colnames<-`(names) %>%
as_tibble()
## Pacotes utilizados nessa apresentação
library(tidyverse)
library(lubridate)
library(tstools)
library(sidrar)
library(zoo)
library(scales)
library(gridExtra)
library(tsibble)
library(timetk)
library(knitr)
install.packages("timetk")
## Pacotes utilizados nessa apresentação
library(tidyverse)
library(lubridate)
library(tstools)
library(sidrar)
library(zoo)
library(scales)
library(gridExtra)
library(tsibble)
library(timetk)
library(knitr)
## Coleta e tratamento dos dados do Comércio Restrito
## names = c('date', 'receita', 'receita_sa', 'volume', 'volume_sa')
restrito = get_sidra(api='/values/t/8185/n1/all/n3/all/v/11706/p/last%2035/c11046/all/d/v11706%205') %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('Índice de receita nominal de vendas no comércio varejista',
'Índice de volume de vendas no comércio varejista')) %>%
`colnames<-`(names) %>%
as_tibble()
## Coleta e tratamento dos dados do Comércio Restrito
names = c('date', 'receita', 'receita_sa', 'volume', 'volume_sa')
restrito = get_sidra(api='/t/3416/n1/all/v/all/p/all/c11046/40311,40312/d/v564%201,v565%201') %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('Índice de receita nominal de vendas no comércio varejista',
'Índice de volume de vendas no comércio varejista')) %>%
`colnames<-`(names) %>%
as_tibble()
View(restrito)
## Coleta e tratamento dos dados do Comércio Restrito
names = c('date', 'receita', 'receita_sa', 'volume', 'volume_sa')
restrito = get_sidra(api='/t/8185/n1/all/v/all/p/all/c11046/40311,40312/d/v564%201,v565%201') %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('Índice de receita nominal de vendas no comércio varejista',
'Índice de volume de vendas no comércio varejista')) %>%
`colnames<-`(names) %>%
as_tibble()
restrito = get_sidra(api='/t/3416/n1/all/v/all/p/all/c11046/40311,40312/d/v564%201,v565%201') %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('Índice de receita nominal de vendas no comércio varejista',
'Índice de volume de vendas no comércio varejista')) %>%
`colnames<-`(names) %>%
as_tibble()
## Coleta e tratamento dos dados do Comércio Restrito
names = c('date', 'receita', 'receita_sa', 'volume', 'volume_sa')
restrito = get_sidra(api='/t/3416/n1/all/v/all/p/all/c11046/40311,40312/d/v564%201,v565%201') %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('Índice de receita nominal de vendas no comércio varejista',
'Índice de volume de vendas no comércio varejista')) %>%
`colnames<-`(names) %>%
as_tibble()
View(restrito)
restrito = get_sidra(api='/t/8185/n1/all/v/all/p/all/c11046/40311,40312/d/v564%201,v565%201') %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('Índice de receita nominal de vendas no comércio varejista',
'Índice de volume de vendas no comércio varejista')) %>%
`colnames<-`(names) %>%
as_tibble()
View(restrito)
## Coleta e tratamento dos dados do Comércio Restrito
names = c('date', 'receita', 'receita_sa', 'volume', 'volume_sa')
restrito = get_sidra(api='t/8185/n1/all/n3/all/v/11706/p/last%2035/c11046/all/d/v11706%205') %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('Índice de receita nominal de vendas no comércio varejista',
'Índice de volume de vendas no comércio varejista')) %>%
`colnames<-`(names) %>%
as_tibble()
restrito = get_sidra(api='/t/8184/n1/all/n3/31,32,33,35/v/11706/p/last%2012/c11046/all/d/v11706%205') %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('Índice de receita nominal de vendas no comércio varejista',
'Índice de volume de vendas no comércio varejista')) %>%
`colnames<-`(names) %>%
as_tibble()
## Pacotes utilizados nessa apresentação
library(tidyverse)
library(lubridate)
library(tstools)
library(sidrar)
library(zoo)
library(scales)
library(gridExtra)
library(tsibble)
library(timetk)
library(knitr)
## Coleta e tratamento dos dados do Comércio Restrito
names = c('date', 'receita', 'receita_sa', 'volume', 'volume_sa')
restrito = get_sidra(api='/t/8184/n1/all/n3/31,32,33,35/v/11706/p/last%2012/c11046/all/d/v11706%205') %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('Índice de receita nominal de vendas no comércio varejista',
'Índice de volume de vendas no comércio varejista')) %>%
`colnames<-`(names) %>%
as_tibble()
#' Biblioteca
library(readxl)
library(ggplot2)
#' Região Sudeste
pmc_sud <- read_excel("pmc_sud.xlsx")
#' Estado de MG
pmc_MG <- read_excel("pmc_MG.xlsx")
head(pmc_MG)
#' Estado de RJ
pmc_RJ <- read_excel("pmc_RJ.xlsx")
#' Biblioteca
library(readxl)
library(ggplot2)
#' Região Sudeste
pmc_sud <- read_excel("pmc_sud.xlsx")
setwd("~/R/curso_de_verao_usp/Trabalho_Curso-de-ver-o-USP")
#' Biblioteca
library(readxl)
library(ggplot2)
#' Região Sudeste
pmc_sud <- read_excel("pmc_sud.xlsx")
head(pmc_sud)
#' Biblioteca
library(readxl)
library(ggplot2)
#' Região Sudeste
pmc_sud <- read_excel("pmc_sud.xlsx")
head(pmc_sud)
#' Estado de SP
pmc_SP <- read_excel("pmc_SP.xlsx")
head(pmc_SP)
#' Estado de MG
pmc_MG <- read_excel("pmc_MG.xlsx")
head(pmc_MG)
#' Estado de RJ
pmc_RJ <- read_excel("pmc_RJ.xlsx")
head(pmc_RJ)
#' Estado de ES
pmc_ES <- read_excel("pmc_ES.xlsx")
head(pmc_ES)
#'Análise descritiva da região Sudeste
#' Região Sudeste
summary(pmc_sud$Receita_Nominal_Vendas)
summary(pmc_sud$Volume_de_Vendas)
boxplot(pmc_sud$Receita_Nominal_Vendas)
boxplot(pmc_sud$Volume_de_Vendas)
ggplot(pmc_sud, aes(x = Mes, y = Receita_Nominal_Vendas)) +
geom_line(aes(group = 1)) +
labs(title = "Variacao da Receita Nominal de Vendas na regiao Sudeste (2022)",
x = "Mes",
y = "Receita Nominal de Vendas") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(pmc_sud, aes(x = Mes, y = Volume_de_Vendas)) +
geom_line(aes(group = 1)) +
labs(title = "Variacao de Volume de Vendas na regiao Sudeste (2022)",
x = "Mes",
y = "Volume de Vendas") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' Análise descritiva do estado de SP
summary(pmc_SP$Receita_Nominal_Vendas)
summary(pmc_SP$Volume_de_Vendas)
boxplot(pmc_SP$Receita_Nominal_Vendas)
boxplot(pmc_SP$Volume_de_Vendas)
ggplot(pmc_SP, aes(x = Mes, y = Receita_Nominal_Vendas)) +
geom_line(aes(group = 1)) +
labs(title = "Variacao da Receita Nominal de Vendas em Sao Paulo (2022)",
x = "Mes",
y = "Receita Nominal de Vendas") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(pmc_SP, aes(x = Mes, y = Volume_de_Vendas)) +
geom_line(aes(group = 1)) +
labs(title = "Variacao de Volume de Vendas em Sao Paulo (2022)",
x = "Mes",
y = "Volume de Vendas") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' Análise descritiva do estado de MG
summary(pmc_MG$Receita_Nominal_Vendas)
summary(pmc_MG$Volume_de_Vendas)
boxplot(pmc_MG$Receita_Nominal_Vendas)
boxplot(pmc_MG$Volume_de_Vendas)
ggplot(pmc_MG, aes(x = Mes, y = Receita_Nominal_Vendas)) +
geom_line(aes(group = 1)) +
labs(title = "Variacao da Receita Nominal de Vendas em Minas Gerais (2022)",
x = "Mes",
y = "Receita Nominal de Vendas") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(pmc_MG, aes(x = Mes, y = Volume_de_Vendas)) +
geom_line(aes(group = 1)) +
labs(title = "Variacao de Volume de Vendas em Minas Gerais (2022)",
x = "Mes",
y = "Volume de Vendas") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' Análise descritiva do estado de RJ
summary(pmc_RJ$Receita_Nominal_Vendas)
summary(pmc_RJ$Volume_de_Vendas)
boxplot(pmc_RJ$Receita_Nominal_Vendas)
boxplot(pmc_RJ$Volume_de_Vendas)
ggplot(pmc_RJ, aes(x = Mes, y = Receita_Nominal_Vendas)) +
geom_line(aes(group = 1)) +
labs(title = "Variacao da Receita Nominal de Vendas em Rio de Janeiro (2022)",
x = "Mes",
y = "Receita Nominal de Vendas") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(pmc_RJ, aes(x = Mes, y = Volume_de_Vendas)) +
geom_line(aes(group = 1)) +
labs(title = "Variacao de Volume de Vendas em Rio de Janeiro (2022)",
x = "Mes",
y = "Volume de Vendas") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' Análise descritiva do estado de ES
summary(pmc_ES$Receita_Nominal_Vendas)
summary(pmc_ES$Volume_de_Vendas)
boxplot(pmc_ES$Receita_Nominal_Vendas)
boxplot(pmc_ES$Volume_de_Vendas)
ggplot(pmc_ES, aes(x = Mes, y = Receita_Nominal_Vendas)) +
geom_line(aes(group = 1)) +
labs(title = "Variacao da Receita Nominal de Vendas em Espirito Santo (2022)",
x = "Mes",
y = "Receita Nominal de Vendas") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(pmc_ES, aes(x = Mes, y = Volume_de_Vendas)) +
geom_line(aes(group = 1)) +
labs(title = "Variacao de Volume de Vendas em Espirito Santo (2022)",
x = "Mes",
y = "Volume de Vendas") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
